;;;;sudoku solver v1
(import
 (sudokuWs)
 (chibi time)  
  (scheme base)
  (scheme red)  
  (chibi io)
  (schemepunk json)  
  (srfi 1)
  (delay)
  (srfi 179)
  (scheme list)
  (chibi loop)
  (scheme vector)
)

(define (solve)
    (let row_loop ((row 0))
	       (let col_loop ((col 0))
                   (display row)
                   (display " ")
                   (display col)
                   (display " ")
                   (find_cell_rowmates (row_col->cell row col))
                   (display " ")
                   (find_cell_colmates (row_col->cell row col))
                   (display " ")
                   (find_cell_boxmates (row_col->cell row col))
                   (display #\newline)
                   ; (display (row_col->cell row col))
                   ; (display " ")
                    ;(display (vector-ref grid (row_col->cell row col)))
                    ;(display #\newline)
                    (if (= (vector-ref grid (row_col->cell row col))0)
                         (let num-loop ((num 1))                                                          
                                 (if (possible? row col num)
                                     (begin
                                       (display row)
                                       (display " ")
                                       (display col)
                                       (display " ")
                                       (display (row_col->cell row col))
                                       (vector-set! grid num (+ 1 (row_col->cell row col)))
                                       (solve)
                                       (when (no-zeros-left?)(print-grid))
                                       (vector-set! grid 0 (+ 1 (row_col->cell row col)))
                                       ))
                                (if (not (= 9 num))(num-loop (+ 1 num)))))
                     ; (print-grid)       
    (if (not (= 8 col))(col_loop (+ col 1))))
                    (if (not (= 8 row))(row_loop (+ row 1)))))
;(print-grid)
(solve)
#|  (let loop ((cell 0))
  (find_cell_rowmates cell)
  (display " ")
  (find_cell_colmates cell)
  (display " ")
  (find_cell_boxmates cell)
  (display #\newline)
  (if (not (= cell 80))(loop (+ 1 cell))))

 |#